name: Build Docker to GAR

on:
  workflow_call:
    inputs:
      google_artifact_registry:
        description: 'The Google Artifact Registry instance to upload the image to'
        required: true
        type: string
      image_name:
        description: 'The name of the docker image to upload'
        required: true
        type: string
      build_config_path:
        description: 'The path to the cloud build config file to use'
        required: true
        type: string
      source_directory_path:
        description: 'The path to the source code used to build this image'
        required: false
        type: string
        default: '.'
      image_tag:
        description: 'The tag of the docker image to upload'
        required: true
        type: string
      workload_identity_provider:
        description: 'The workload identity provider pool'
        required: true
        type: string
      workload_identity_service_account:
        description: 'The service account used by GitHub actions'
        required: true
        type: string
    secrets:
      input_github_token:
        required: true
    outputs:
      image:
        description: "The versioned image identifier"
        value: ${{ jobs.build-docker-to-gar.outputs.image }}

jobs:
  build-docker-to-gar:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.build_image.outputs.image }}
    permissions:
      contents: 'read'
      pull-requests: 'read'
      id-token: 'write'
    env:
      GITHUB_TOKEN: ${{ secrets.input_github_token }}
      GOOGLE_REGION: ${{ inputs.google_region }}
      GOOGLE_ARTIFACT_REGISTRY: ${{ inputs.google_artifact_registry }}
      IMAGE_NAME:  ${{ inputs.image_name }}
      IMAGE_TAG: ${{ inputs.image_tag }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4.2.2
      with:
        submodules: recursive

    - id: 'auth'
      uses: google-github-actions/auth@v2.1.7
      with:
        workload_identity_provider: ${{ inputs.workload_identity_provider }}
        service_account: ${{ inputs.workload_identity_service_account }}

    - name: 'Set up Cloud SDK'
      uses: google-github-actions/setup-gcloud@v2.1.1
      with:
        install_components: 'beta'

    - id: auth_docker
      name: "Auth Docker"
      run: |-
        gcloud auth configure-docker us-docker.pkg.dev

    - id: build_image
      name: 'Build Docker image to GAR'
      run: |-
        gcloud beta builds submit --config ${{ inputs.build_config_path }} --substitutions _GCLOUD_PROJECT=$GCLOUD_PROJECT,_GOOGLE_ARTIFACT_REGISTRY=$GOOGLE_ARTIFACT_REGISTRY,_IMAGE_NAME=$IMAGE_NAME,_IMAGE_TAG=$IMAGE_TAG,_SOURCE_DIR=${{ inputs.source_directory_path }}
        echo "image=us-docker.pkg.dev/$GCLOUD_PROJECT/$GOOGLE_ARTIFACT_REGISTRY/$IMAGE_NAME:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - id: retag_image_as_latest
      name: 'Tag image as latest'
      run: |-
        docker pull us-docker.pkg.dev/$GCLOUD_PROJECT/$GOOGLE_ARTIFACT_REGISTRY/$IMAGE_NAME:$IMAGE_TAG
        docker tag us-docker.pkg.dev/$GCLOUD_PROJECT/$GOOGLE_ARTIFACT_REGISTRY/$IMAGE_NAME:$IMAGE_TAG us-docker.pkg.dev/$GCLOUD_PROJECT/$GOOGLE_ARTIFACT_REGISTRY/$IMAGE_NAME:latest
        docker push us-docker.pkg.dev/$GCLOUD_PROJECT/$GOOGLE_ARTIFACT_REGISTRY/$IMAGE_NAME:latest

    - id: generate_sbom
      name: 'Generate SBOM for Image'
      run: "gcloud artifacts sbom export --uri=us-docker.pkg.dev/$GCLOUD_PROJECT/$GOOGLE_ARTIFACT_REGISTRY/$IMAGE_NAME:$IMAGE_TAG"
